buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.5'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'org.asciidoctor.convert' version '1.5.8'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.pjs'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    implementation "com.querydsl:querydsl-apt:${queryDslVersion}"

    implementation 'org.projectlombok:lombok:1.18.18'
    compileOnly 'org.projectlombok:lombok'
    implementation 'org.springframework.boot:spring-boot-starter-validation'


    testRuntimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'
    testImplementation group: 'it.ozimov', name: 'embedded-redis', version: '0.7.2'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.1'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.1'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.1'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'

    implementation 'junit:junit:4.13.1'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'org.springframework.security:spring-security-test'

    implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.3.6'
}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

//tasks.named('asciidoctor') {
//    inputs.dir snippetsDir
//    dependsOn test
//}
ext {
    snippetsDir = file('build/generated-snippets')
}
//
//asciidoctor {
//    dependsOn test
//    inputs.dir snippetsDir
//}
//
//asciidoctor.doFirst {
//    delete file('src/main/resources/static/docs')
//}

bootJar {

//    dependsOn asciidoctor
//    copy {
//        from "${asciidoctor.outputDir}"
//        into 'BOOT-INF/classes/static/docs'
//    }
    mainClass = 'com.pjs.blog.BlogApplication'
}

task copyDocument(type: Copy) {
    dependsOn asciidoctor
    from file("build/docs/asciidoc")
    into file("src/main/resources/static/docs")
}
build {
    dependsOn copyDocument
}

// querydsl 사용할 경로 지정합니다. 현재 지정한 부분은 .gitignore에 포함되므로 git에 올라가지 않습니다.
def querydslDir = "$buildDir/generated/'querydsl'"

// JPA 사용여부 및 사용 경로 설정
querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}

// build시 사용할 sourceSet 추가 설정
sourceSets {
    main.java.srcDir querydslDir
}


// querydsl 컴파일 시 사용할 옵션 설정
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

// querydsl이 compileClassPath를 상속하도록 설정
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}